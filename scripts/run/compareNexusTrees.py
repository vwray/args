# -*- coding: utf-8 -*-
"""
Created on Wed Nov 15 20:23:39 2023

@author: valer
"""

import msprime
import demes
import tszip
import dendropy
from dendropy.calculate import treecompare
from compare_two_trees import compare_trees
from matplotlib import pyplot as plt

treeList = dendropy.TreeList.get(
        path="H://My Drive//Fall2023//research//outputFiles//trueTreesNexus_3samples_100_000SequenceLen.nex",
        schema="nexus")
#print(treeList)

#help(treeList)

distances = []

previousTree = treeList[0]
for i in range(1, len(treeList)):
    #print(treeList[i])    
    print(f"Symmetric distance between tree {i-1} and tree {i} is {treecompare.symmetric_difference(previousTree, treeList[i], is_bipartitions_updated=False)}")

    print(f"Weighted RF distance between tree {i-1} and tree {i} is {treecompare.weighted_robinson_foulds_distance(previousTree, treeList[i])}")
    fp, fn = treecompare.false_positives_and_negatives(previousTree, treeList[i])
    print(f"There are {fp} false positivies and {fn} false negatives.")
    #distances[i-1]=
    [nl, ei1, ei2, fn, fp, rf] = compare_trees(previousTree,treeList[i])
    distances.append(rf)
    
    previousTree = treeList[i]

print(distances)

plt.plot(distances)
plt.title("Distances between Adjacent Trees generated by Msprime")
plt.xlabel("Tree index")
plt.ylabel("RF distance with adjacent tree")
plt.savefig('H://My Drive//Fall2023//research//outputFiles//treeComp_msprime_100thousSeqLen_3samples.png')